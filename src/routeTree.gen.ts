/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutProtectedImport } from './routes/_layout/_protected'
import { Route as LayoutTwsIndexImport } from './routes/_layout/tws/index'
import { Route as LayoutRegisterIndexImport } from './routes/_layout/register/index'
import { Route as LayoutProfileIndexImport } from './routes/_layout/profile/index'
import { Route as LayoutProductsIndexImport } from './routes/_layout/products/index'
import { Route as LayoutMouseIndexImport } from './routes/_layout/mouse/index'
import { Route as LayoutLoginIndexImport } from './routes/_layout/login/index'
import { Route as LayoutKeyboardsIndexImport } from './routes/_layout/keyboards/index'
import { Route as LayoutHeadphoneIndexImport } from './routes/_layout/headphone/index'
import { Route as LayoutCheckoutIndexImport } from './routes/_layout/checkout/index'
import { Route as LayoutAccessoriesIndexImport } from './routes/_layout/accessories/index'
import { Route as LayoutProductsProductSlugRouteImport } from './routes/_layout/products/$productSlug/route'
import { Route as LayoutProtectedOrderIndexImport } from './routes/_layout/_protected/order/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutProtectedRoute = LayoutProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTwsIndexRoute = LayoutTwsIndexImport.update({
  path: '/tws/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutRegisterIndexRoute = LayoutRegisterIndexImport.update({
  path: '/register/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProfileIndexRoute = LayoutProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProductsIndexRoute = LayoutProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMouseIndexRoute = LayoutMouseIndexImport.update({
  path: '/mouse/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLoginIndexRoute = LayoutLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutKeyboardsIndexRoute = LayoutKeyboardsIndexImport.update({
  path: '/keyboards/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHeadphoneIndexRoute = LayoutHeadphoneIndexImport.update({
  path: '/headphone/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCheckoutIndexRoute = LayoutCheckoutIndexImport.update({
  path: '/checkout/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAccessoriesIndexRoute = LayoutAccessoriesIndexImport.update({
  path: '/accessories/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProductsProductSlugRouteRoute =
  LayoutProductsProductSlugRouteImport.update({
    path: '/products/$productSlug',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutProtectedOrderIndexRoute = LayoutProtectedOrderIndexImport.update({
  path: '/order/',
  getParentRoute: () => LayoutProtectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_protected': {
      id: '/_layout/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutProtectedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/products/$productSlug': {
      id: '/_layout/products/$productSlug'
      path: '/products/$productSlug'
      fullPath: '/products/$productSlug'
      preLoaderRoute: typeof LayoutProductsProductSlugRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/accessories/': {
      id: '/_layout/accessories/'
      path: '/accessories'
      fullPath: '/accessories'
      preLoaderRoute: typeof LayoutAccessoriesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/checkout/': {
      id: '/_layout/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof LayoutCheckoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/headphone/': {
      id: '/_layout/headphone/'
      path: '/headphone'
      fullPath: '/headphone'
      preLoaderRoute: typeof LayoutHeadphoneIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/keyboards/': {
      id: '/_layout/keyboards/'
      path: '/keyboards'
      fullPath: '/keyboards'
      preLoaderRoute: typeof LayoutKeyboardsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/login/': {
      id: '/_layout/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutLoginIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/mouse/': {
      id: '/_layout/mouse/'
      path: '/mouse'
      fullPath: '/mouse'
      preLoaderRoute: typeof LayoutMouseIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/products/': {
      id: '/_layout/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof LayoutProductsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/profile/': {
      id: '/_layout/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProfileIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/register/': {
      id: '/_layout/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof LayoutRegisterIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/tws/': {
      id: '/_layout/tws/'
      path: '/tws'
      fullPath: '/tws'
      preLoaderRoute: typeof LayoutTwsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_protected/order/': {
      id: '/_layout/_protected/order/'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof LayoutProtectedOrderIndexImport
      parentRoute: typeof LayoutProtectedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LayoutRoute: LayoutRoute.addChildren({
    LayoutProtectedRoute: LayoutProtectedRoute.addChildren({
      LayoutProtectedOrderIndexRoute,
    }),
    LayoutProductsProductSlugRouteRoute,
    LayoutAccessoriesIndexRoute,
    LayoutCheckoutIndexRoute,
    LayoutHeadphoneIndexRoute,
    LayoutKeyboardsIndexRoute,
    LayoutLoginIndexRoute,
    LayoutMouseIndexRoute,
    LayoutProductsIndexRoute,
    LayoutProfileIndexRoute,
    LayoutRegisterIndexRoute,
    LayoutTwsIndexRoute,
  }),
  AboutLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_protected",
        "/_layout/products/$productSlug",
        "/_layout/accessories/",
        "/_layout/checkout/",
        "/_layout/headphone/",
        "/_layout/keyboards/",
        "/_layout/login/",
        "/_layout/mouse/",
        "/_layout/products/",
        "/_layout/profile/",
        "/_layout/register/",
        "/_layout/tws/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_layout/_protected": {
      "filePath": "_layout/_protected.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_protected/order/"
      ]
    },
    "/_layout/products/$productSlug": {
      "filePath": "_layout/products/$productSlug/route.tsx",
      "parent": "/_layout"
    },
    "/_layout/accessories/": {
      "filePath": "_layout/accessories/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/checkout/": {
      "filePath": "_layout/checkout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/headphone/": {
      "filePath": "_layout/headphone/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/keyboards/": {
      "filePath": "_layout/keyboards/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/login/": {
      "filePath": "_layout/login/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/mouse/": {
      "filePath": "_layout/mouse/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/products/": {
      "filePath": "_layout/products/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/profile/": {
      "filePath": "_layout/profile/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/register/": {
      "filePath": "_layout/register/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/tws/": {
      "filePath": "_layout/tws/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/_protected/order/": {
      "filePath": "_layout/_protected/order/index.tsx",
      "parent": "/_layout/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
